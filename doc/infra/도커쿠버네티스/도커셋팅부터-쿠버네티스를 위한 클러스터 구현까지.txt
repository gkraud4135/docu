docker 설치
	sudo apt install docker.io
명령 수행 후 아래와 같은 잠김 때문에 설치가 안된다는 메세지 표시되면 시스템 리부팅한다(reboot)
이후 재설치
docker + tab으로 docker 설치됫는지 확인

gedit install.sh

# install.sh
sudo apt-get update && sudo apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

-----------------------------------------------------kube설치셋팅파일
셋팅이후 

install.sh

이후 kube + tab으로 설치됫는지 확인

apt install vim net-tools -y

------------------------
sudo swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
-----------------------스왑기능 영구 정지 sudo swapon -a로 다시 on가능

이후 free로 스왑메모리 0인거 확인

셋팅확인후 halt명령어로 종료 

NetNetwork 새로 생성

마스터 노드 복제 -> MAC주소정책 - 모든 네트워크의 새 MAC주소 생성으로 복제

이후 모든 노드들을 파워온하고 

모든 노드들은 식별성이 잇어야 하므로 호스트 이름을 변경해주는 작업을 진행함

gedit /etc/hostname
으로 호스트네임변경

이후 restart

master node부터 먼저 실행--

echo '{"exec-opts": ["native.cgroupdriver=systemd"]}' >> /etc/docker/daemon.json
systemctl restart docker

명령어로 노드 초기화 이후 

kubeadm init 명령어로 클러스터 생성

-- master node > exit 일반사용자로 
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
작성

kubectl get node 클러스터 생성 확인
[만약 엉켜서 get node가 안나올경우]
sudo rm -i /etc/kubernetes/admin.conf $HOME/.kube/config
설정파일 지우고
kubeadmin reset
이후 다시 
 도커초기화 작업 -> kubeadm init 

--생성확인후 슬레이브 노드 root로 연결

root권한으로 각각 수행
# 워커노드에 참여를 위해 실행하는 명령(join)
join hash는 init 한 master 노드에서 확인해야함

작업완료된후

마스터노드에서 

kubectl get nodes 로 3개 연결됫는지 확인 이후

마스터노드 - 유저로
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

이후 마스터노드에서 1~2분간 기다린다

이후 

kubectl get nodes 입력해서 ready상태로 된것 확인[유저상태]

이후

kubectl run nginx --image=nginx
kubectl get pod
kubectl port-forward nginx 8080:80

이후 

localhost:8080 으로 접속하여 nginx 페이지 나오는것까지 확인하기




